<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0207.2140                               -->
<workbook source-build='10.1.5 (10100.17.0207.2140)' source-platform='win' version='10.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location derived-from='https://public.tableau.com/workbooks/Uber_Location_Vizualizations?rev=1.1' id='Uber_Location_Vizualizations' path='/workbooks' revision='1.3' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.1'>
      <aliases enabled='yes' />
      <column caption='NYC average' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='28190.0'>
        <calculation class='tableau' formula='28190.0' />
      </column>
      <column caption='NYC Average' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='55752.0'>
        <calculation class='tableau' formula='55752.0' />
      </column>
    </datasource>
    <datasource caption='Sheet1 (uber_loc)' inline='true' name='federated.02fwd810xomj0v1gmb4i306m5a3z' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='uber_loc' name='excel-direct.1si5rpb0d4rbyc15vncme0mfeykt'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' interpretationMode='0' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1si5rpb0d4rbyc15vncme0mfeykt' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B10001:no:A1:B10001:0' header='yes' outcome='6'>
            <column datatype='real' name='Lat' ordinal='0' />
            <column datatype='real' name='Lon' ordinal='1' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lon]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Lon</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B10001:no:A1:B10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Lat]' derivation='None' name='[none:Lat:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Lon]' derivation='None' name='[none:Lon:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Inclusions (Lat,Lon)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Lat:qk]' />
          <groupfilter function='level-members' level='[none:Lon:qk]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Rick\Documents\My Tableau Repository\Datasources\Sheet1 (uber_loc).tde' schema='Extract' tablename='Extract' update-time='03/04/2017 09:06:29 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='4534327' timestamp-start='2017-03-04 21:06:29.488' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lat</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7092</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>39.6569</statistic>
                <statistic aggregation='Max' datatype='real'>42.116599999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>4534327</statistic>
                <statistic aggregation='Median' datatype='real'>40.742199999999997</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lon</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lon]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lon</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11453</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-74.929000000000002</statistic>
                <statistic aggregation='Max' datatype='real'>-72.066599999999994</statistic>
                <statistic aggregation='Count' datatype='integer'>4534327</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>2</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>4534327</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.459391' measure-ordering='alphabetic' measure-percentage='0.540609' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (top_5_male)' inline='true' name='federated.0589wz90vav4f1169rwy21752fv5' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='top_5_male' name='excel-direct.0ouowf31eib6gb126kugo1ldygtm'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' interpretationMode='0' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0ouowf31eib6gb126kugo1ldygtm' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B6:no:A1:B6:0' header='yes' outcome='6'>
            <column datatype='string' name='Zone' ordinal='0' />
            <column datatype='real' name='Median Age (Males)' ordinal='1' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Zone]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Zone</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median Age (Males)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Median Age (Males)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Median Age (Males)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B6:no:A1:B6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Rick\Documents\My Tableau Repository\Datasources\Sheet1 (top_5_male).tde' schema='Extract' tablename='Extract' update-time='03/05/2017 07:45:50 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='5' timestamp-start='2017-03-05 19:45:50.725' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Median Age (Males)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Median Age (Males)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Median Age (Males)</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>187.80000000000001</statistic>
                <statistic aggregation='Avg' datatype='real'>37.560000000000002</statistic>
                <statistic aggregation='Min' datatype='real'>35.100000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>40.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.2467754671973692</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.0095770699328663</statistic>
                <statistic aggregation='Var' datatype='real'>5.0479999999999565</statistic>
                <statistic aggregation='VarP' datatype='real'>4.0383999999999647</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>7073.96</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Zone</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Zone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Zone</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;East Village&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;West Village&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;TriBeCa/Civic Center&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.472149' measure-ordering='alphabetic' measure-percentage='0.527851' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (low_5_male)' inline='true' name='federated.07u22bw0hvp68r10xezl814wi87o' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='low_5_male' name='excel-direct.1nrdrmk1hby98018r7dsl0u10thh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' interpretationMode='0' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1nrdrmk1hby98018r7dsl0u10thh' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B6:no:A1:B6:0' header='yes' outcome='6'>
            <column datatype='string' name='Zone' ordinal='0' />
            <column datatype='real' name='Median Age (Males)' ordinal='1' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Zone]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Zone</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median Age (Males)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Median Age (Males)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Median Age (Males)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B6:no:A1:B6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Rick\Documents\My Tableau Repository\Datasources\Sheet1 (low_5_male).tde' schema='Extract' tablename='Extract' update-time='03/05/2017 07:45:21 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='5' timestamp-start='2017-03-05 19:45:21.060' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Median Age (Males)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Median Age (Males)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Median Age (Males)</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>167.10000000000002</statistic>
                <statistic aggregation='Avg' datatype='real'>33.420000000000002</statistic>
                <statistic aggregation='Min' datatype='real'>31.199999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>35.200000000000003</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.7469974241536528</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.5625619987698403</statistic>
                <statistic aggregation='Var' datatype='real'>3.0519999999994978</statistic>
                <statistic aggregation='VarP' datatype='real'>2.4415999999995983</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5596.6899999999996</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Zone</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Zone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Zone</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Battery Park&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Manhattanville&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Inwood&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.464164' measure-ordering='alphabetic' measure-percentage='0.535836' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (low_5_population)' inline='true' name='federated.0a0801d0oojdgw119bf2p1ua03fq' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='low_5_population' name='excel-direct.02ooz530gbwi091e7qcku0i9tz9i'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' interpretationMode='0' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.02ooz530gbwi091e7qcku0i9tz9i' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B6:no:A1:B6:0' header='yes' outcome='6'>
            <column datatype='string' name='Zone' ordinal='0' />
            <column datatype='integer' name='Population Density' ordinal='1' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Zone]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Zone</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Density</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population Density]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population Density</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B6:no:A1:B6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Rick\Documents\My Tableau Repository\Datasources\Sheet1 (low_5_population).tde' schema='Extract' tablename='Extract' update-time='03/05/2017 07:45:25 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='5' timestamp-start='2017-03-05 19:45:25.967' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population Density</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Population Density]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population Density</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>377253.0</statistic>
                <statistic aggregation='Avg' datatype='real'>75450.600000000006</statistic>
                <statistic aggregation='Min' datatype='integer'>45186</statistic>
                <statistic aggregation='Max' datatype='integer'>118751</statistic>
                <statistic aggregation='Stdev' datatype='real'>37299.936170186673</statistic>
                <statistic aggregation='StdevP' datatype='real'>33362.07713317623</statistic>
                <statistic aggregation='Var' datatype='real'>1391285238.3</statistic>
                <statistic aggregation='VarP' datatype='real'>1113028190.6400001</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>34029106155.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Zone</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Zone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Zone</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Battery Park&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Manhattanville&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Inwood&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.391304' measure-ordering='alphabetic' measure-percentage='0.391304' parameter-percentage='0.217391' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (uber2015_agg)' inline='true' name='federated.0izu1xh1yhf3k51djjnit0uonsgm' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='uber2015_agg' name='excel-direct.07mxn841c48fon14nrp4h1unnfdo'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' interpretationMode='0' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.07mxn841c48fon14nrp4h1unnfdo' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B68:no:A1:B68:0' header='yes' outcome='2'>
            <column datatype='string' name='F1' ordinal='0' />
            <column datatype='integer' name='Zone' ordinal='1' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Zone]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Zone</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B68:no:A1:B68:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Rick\Documents\My Tableau Repository\Datasources\Sheet1 (uber2015_agg).tde' schema='Extract' tablename='Extract' update-time='03/04/2017 09:06:22 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='67' timestamp-start='2017-03-04 21:06:22.980' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>67</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alphabet City&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Yorkville West&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>67</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Lower East Side&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>67.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>67</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>67.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Zone</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Zone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Zone</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>67</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>10371060.0</statistic>
                <statistic aggregation='Avg' datatype='real'>154791.94029850746</statistic>
                <statistic aggregation='Min' datatype='integer'>12</statistic>
                <statistic aggregation='Max' datatype='integer'>460732</statistic>
                <statistic aggregation='Stdev' datatype='real'>120238.38514988018</statistic>
                <statistic aggregation='StdevP' datatype='real'>119337.71040702291</statistic>
                <statistic aggregation='Var' datatype='real'>14457269263.450928</statistic>
                <statistic aggregation='VarP' datatype='real'>14241489125.190466</statistic>
                <statistic aggregation='Count' datatype='integer'>67</statistic>
                <statistic aggregation='Median' datatype='integer'>133630</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2559536271740.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.359551' measure-ordering='alphabetic' measure-percentage='0.404494' parameter-percentage='0.235955' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (top_5_population)' inline='true' name='federated.1au7228032qtwo1fqkwst062qc4n' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='top_5_population' name='excel-direct.0qbp4sc1yvtevj1d6vvlq12wfacn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' interpretationMode='0' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0qbp4sc1yvtevj1d6vvlq12wfacn' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B6:no:A1:B6:0' header='yes' outcome='6'>
            <column datatype='string' name='Zone' ordinal='0' />
            <column datatype='integer' name='Population Density' ordinal='1' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Zone]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Zone</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Density</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population Density]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population Density</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B6:no:A1:B6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Rick\Documents\My Tableau Repository\Datasources\Sheet1 (top_5_population).tde' schema='Extract' tablename='Extract' update-time='03/05/2017 07:46:01 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='5' timestamp-start='2017-03-05 19:46:01.111' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population Density</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Population Density]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population Density</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>301496.0</statistic>
                <statistic aggregation='Avg' datatype='real'>60299.199999999997</statistic>
                <statistic aggregation='Min' datatype='integer'>41579</statistic>
                <statistic aggregation='Max' datatype='integer'>84277</statistic>
                <statistic aggregation='Stdev' datatype='real'>18548.139615605658</statistic>
                <statistic aggregation='StdevP' datatype='real'>16589.960414660429</statistic>
                <statistic aggregation='Var' datatype='real'>344033483.19999999</statistic>
                <statistic aggregation='VarP' datatype='real'>275226786.56</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>19556101536.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Zone</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Zone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Zone</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;East Village&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;West Village&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;TriBeCa/Civic Center&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.359259' measure-ordering='alphabetic' measure-percentage='0.407407' parameter-percentage='0.233333' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (low_5_female)' inline='true' name='federated.1ebhdsu0wcfrrs1ahe42h0gxma8y' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='low_5_female' name='excel-direct.1c90c5d1tpxkv91fzy0v710704pe'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' interpretationMode='0' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1c90c5d1tpxkv91fzy0v710704pe' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B6:no:A1:B6:0' header='yes' outcome='6'>
            <column datatype='string' name='Zone' ordinal='0' />
            <column datatype='real' name='Median Age (Females)' ordinal='1' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Zone]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Zone</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median Age (Females)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Median Age (Females)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Median Age (Females)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B6:no:A1:B6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Rick\Documents\My Tableau Repository\Datasources\Sheet1 (low_5_female).tde' schema='Extract' tablename='Extract' update-time='03/05/2017 07:45:04 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='5' timestamp-start='2017-03-05 19:45:04.064' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Median Age (Females)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Median Age (Females)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Median Age (Females)</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>187.5</statistic>
                <statistic aggregation='Avg' datatype='real'>37.5</statistic>
                <statistic aggregation='Min' datatype='real'>31.399999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>40.5</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.5206533484567992</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.1489680849446633</statistic>
                <statistic aggregation='Var' datatype='real'>12.395000000000072</statistic>
                <statistic aggregation='VarP' datatype='real'>9.916000000000059</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>7080.8300000000008</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Zone</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Zone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Zone</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Battery Park&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Manhattanville&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Inwood&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.464164' measure-ordering='alphabetic' measure-percentage='0.535836' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (top_5_income)' inline='true' name='federated.1fnieb31otlwqw19nuwpg09b5aqq' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='top_5_income' name='excel-direct.1xgsj38026h68q15dlr0d06uiuuk'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' interpretationMode='0' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1xgsj38026h68q15dlr0d06uiuuk' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B6:no:A1:B6:0' header='yes' outcome='6'>
            <column datatype='string' name='Zone' ordinal='0' />
            <column datatype='integer' name='Median Household Income' ordinal='1' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Zone]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Zone</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median Household Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Median Household Income]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Median Household Income</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B6:no:A1:B6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Rick\Documents\My Tableau Repository\Datasources\Sheet1 (top_5_income).tde' schema='Extract' tablename='Extract' update-time='03/05/2017 07:45:39 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='5' timestamp-start='2017-03-05 19:45:39.002' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Median Household Income</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Median Household Income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Median Household Income</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>699783.0</statistic>
                <statistic aggregation='Avg' datatype='real'>139956.60000000001</statistic>
                <statistic aggregation='Min' datatype='integer'>76016</statistic>
                <statistic aggregation='Max' datatype='integer'>222849</statistic>
                <statistic aggregation='Stdev' datatype='real'>54047.81150796025</statistic>
                <statistic aggregation='StdevP' datatype='real'>48341.832226757811</statistic>
                <statistic aggregation='Var' datatype='real'>2921165928.8000002</statistic>
                <statistic aggregation='VarP' datatype='real'>2336932743.04</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>109623913133.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Zone</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Zone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Zone</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;East Village&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;West Village&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;TriBeCa/Civic Center&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.474801' measure-ordering='alphabetic' measure-percentage='0.525199' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (low_5_income)' inline='true' name='federated.1kvuyw31n5r68f155npv90lpxn5m' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='low_5_income' name='excel-direct.0mb2sww1v28khx1h2mu2n1miicsw'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' interpretationMode='0' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0mb2sww1v28khx1h2mu2n1miicsw' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B6:no:A1:B6:0' header='yes' outcome='6'>
            <column datatype='string' name='Zone' ordinal='0' />
            <column datatype='integer' name='Median Household Income' ordinal='1' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Zone]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Zone</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median Household Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Median Household Income]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Median Household Income</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B6:no:A1:B6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Rick\Documents\My Tableau Repository\Datasources\Sheet1 (low_5_income).tde' schema='Extract' tablename='Extract' update-time='03/05/2017 07:45:14 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='5' timestamp-start='2017-03-05 19:45:14.137' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Median Household Income</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Median Household Income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Median Household Income</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>313006.0</statistic>
                <statistic aggregation='Avg' datatype='real'>62601.199999999997</statistic>
                <statistic aggregation='Min' datatype='integer'>40857</statistic>
                <statistic aggregation='Max' datatype='integer'>129352</statistic>
                <statistic aggregation='Stdev' datatype='real'>37647.756071245465</statistic>
                <statistic aggregation='StdevP' datatype='real'>33673.176710254113</statistic>
                <statistic aggregation='Var' datatype='real'>1417353537.2</statistic>
                <statistic aggregation='VarP' datatype='real'>1133882829.76</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>25263965356.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Zone</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Zone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Zone</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Battery Park&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Manhattanville&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Inwood&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.464968' measure-ordering='alphabetic' measure-percentage='0.535032' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (top_5_female)' inline='true' name='federated.1uef7ux1wisnjk114n71f0zang99' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='top_5_female' name='excel-direct.12wobpr186pq9210m0kfu1cl0boy'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' interpretationMode='0' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.12wobpr186pq9210m0kfu1cl0boy' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B6:no:A1:B6:0' header='yes' outcome='6'>
            <column datatype='string' name='Zone' ordinal='0' />
            <column datatype='real' name='Median Age (Females)' ordinal='1' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Zone]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Zone</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median Age (Females)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Median Age (Females)]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Median Age (Females)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B6:no:A1:B6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Rick\Documents\My Tableau Repository\Datasources\Sheet1 (top_5_female).tde' schema='Extract' tablename='Extract' update-time='03/05/2017 07:45:30 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='5' timestamp-start='2017-03-05 19:45:30.953' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Median Age (Females)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Median Age (Females)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Median Age (Females)</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>183.60000000000002</statistic>
                <statistic aggregation='Avg' datatype='real'>36.720000000000006</statistic>
                <statistic aggregation='Min' datatype='real'>34.899999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>38.600000000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.3608820668962025</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.2172099243761298</statistic>
                <statistic aggregation='Var' datatype='real'>1.8519999999996799</statistic>
                <statistic aggregation='VarP' datatype='real'>1.4815999999997438</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6749.1999999999998</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Zone</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Zone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Zone</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;East Village&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;West Village&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>5</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;TriBeCa/Civic Center&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US_CI&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.47191' measure-ordering='alphabetic' measure-percentage='0.52809' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='HeatMap'>
      <repository-location id='HeatMap' path='/workbooks/Uber_Location_Vizualizations' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (uber_loc)' name='federated.02fwd810xomj0v1gmb4i306m5a3z' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.02fwd810xomj0v1gmb4i306m5a3z'>
            <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lat]' derivation='None' name='[none:Lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Lon]' derivation='None' name='[none:Lon:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.02fwd810xomj0v1gmb4i306m5a3z].[none:Lon:qk]' field-type='quantitative' max='-8222797.4788921755' min='-8249207.3411330264' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.02fwd810xomj0v1gmb4i306m5a3z].[none:Lat:qk]' field-type='quantitative' max='4983321.7394676646' min='4968331.488792588' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.02fwd810xomj0v1gmb4i306m5a3z].[cnt:Number of Records:qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
            <encoding attr='color' field='[federated.02fwd810xomj0v1gmb4i306m5a3z].[cnt:Number of Records:qk]' max='50' min='1' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.02fwd810xomj0v1gmb4i306m5a3z].[cnt:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a0cbe8' />
                <format attr='size' value='0.07596684992313385' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02fwd810xomj0v1gmb4i306m5a3z].[none:Lat:qk]</rows>
        <cols>[federated.02fwd810xomj0v1gmb4i306m5a3z].[none:Lon:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Low 5'>
      <repository-location id='Low5' path='/workbooks/Uber_Location_Vizualizations' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (low_5_population)' name='federated.0a0801d0oojdgw119bf2p1ua03fq' />
            <datasource name='Parameters' />
            <datasource caption='Sheet1 (low_5_male)' name='federated.07u22bw0hvp68r10xezl814wi87o' />
            <datasource caption='Sheet1 (low_5_female)' name='federated.1ebhdsu0wcfrrs1ahe42h0gxma8y' />
            <datasource caption='Sheet1 (low_5_income)' name='federated.1kvuyw31n5r68f155npv90lpxn5m' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='NYC average' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='28190.0'>
              <calculation class='tableau' formula='28190.0' />
            </column>
            <column caption='NYC Average' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='55752.0'>
              <calculation class='tableau' formula='55752.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.07u22bw0hvp68r10xezl814wi87o'>
            <column datatype='real' name='[Median Age (Males)]' role='measure' type='quantitative' />
            <column-instance column='[Median Age (Males)]' derivation='Sum' name='[sum:Median Age (Males):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0a0801d0oojdgw119bf2p1ua03fq'>
            <column datatype='integer' name='[Population Density]' role='measure' type='quantitative' />
            <column datatype='string' name='[Zone]' role='dimension' type='nominal' />
            <column-instance column='[Zone]' derivation='None' name='[none:Zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population Density]' derivation='Sum' name='[sum:Population Density:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ebhdsu0wcfrrs1ahe42h0gxma8y'>
            <column datatype='real' name='[Median Age (Females)]' role='measure' type='quantitative' />
            <column-instance column='[Median Age (Females)]' derivation='Sum' name='[sum:Median Age (Females):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1kvuyw31n5r68f155npv90lpxn5m'>
            <column datatype='integer' name='[Median Household Income]' role='measure' type='quantitative' />
            <column-instance column='[Median Household Income]' derivation='Sum' name='[sum:Median Household Income:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0a0801d0oojdgw119bf2p1ua03fq].[sum:Population Density:qk]' field-type='quantitative' max='125000' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0a0801d0oojdgw119bf2p1ua03fq].[sum:Population Density:qk]' scope='rows' value='Population Density (Sq. Mile)' />
            <format attr='subtitle' class='0' field='[federated.0a0801d0oojdgw119bf2p1ua03fq].[sum:Population Density:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0a0801d0oojdgw119bf2p1ua03fq].[sum:Population Density:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1kvuyw31n5r68f155npv90lpxn5m].[sum:Median Household Income:qk]' field-type='quantitative' max='235000' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1kvuyw31n5r68f155npv90lpxn5m].[sum:Median Household Income:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1kvuyw31n5r68f155npv90lpxn5m].[sum:Median Household Income:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.07u22bw0hvp68r10xezl814wi87o].[sum:Median Age (Males):qk]' field-type='quantitative' max='45.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.07u22bw0hvp68r10xezl814wi87o].[sum:Median Age (Males):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.07u22bw0hvp68r10xezl814wi87o].[sum:Median Age (Males):qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1ebhdsu0wcfrrs1ahe42h0gxma8y].[sum:Median Age (Females):qk]' field-type='quantitative' max='45.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1ebhdsu0wcfrrs1ahe42h0gxma8y].[sum:Median Age (Females):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1ebhdsu0wcfrrs1ahe42h0gxma8y].[sum:Median Age (Females):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <reference-line axis-column='[federated.0a0801d0oojdgw119bf2p1ua03fq].[sum:Population Density:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <reference-line axis-column='[federated.1kvuyw31n5r68f155npv90lpxn5m].[sum:Median Household Income:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[Parameters].[Parameter 2]' z-order='2' />
            <reference-line axis-column='[federated.07u22bw0hvp68r10xezl814wi87o].[sum:Median Age (Males):qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.07u22bw0hvp68r10xezl814wi87o].[sum:Median Age (Males):qk]' z-order='3' />
          </pane>
          <pane id='1' y-axis-name='[federated.0a0801d0oojdgw119bf2p1ua03fq].[sum:Population Density:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[federated.1kvuyw31n5r68f155npv90lpxn5m].[sum:Median Household Income:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[federated.07u22bw0hvp68r10xezl814wi87o].[sum:Median Age (Males):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#606b76' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[federated.1ebhdsu0wcfrrs1ahe42h0gxma8y].[sum:Median Age (Females):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0a0801d0oojdgw119bf2p1ua03fq].[sum:Population Density:qk] + ([federated.1kvuyw31n5r68f155npv90lpxn5m].[sum:Median Household Income:qk] + ([federated.07u22bw0hvp68r10xezl814wi87o].[sum:Median Age (Males):qk] + [federated.1ebhdsu0wcfrrs1ahe42h0gxma8y].[sum:Median Age (Females):qk])))</rows>
        <cols>[federated.0a0801d0oojdgw119bf2p1ua03fq].[none:Zone:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Top 5'>
      <repository-location id='Top5' path='/workbooks/Uber_Location_Vizualizations' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (top_5_population)' name='federated.1au7228032qtwo1fqkwst062qc4n' />
            <datasource name='Parameters' />
            <datasource caption='Sheet1 (top_5_male)' name='federated.0589wz90vav4f1169rwy21752fv5' />
            <datasource caption='Sheet1 (top_5_income)' name='federated.1fnieb31otlwqw19nuwpg09b5aqq' />
            <datasource caption='Sheet1 (top_5_female)' name='federated.1uef7ux1wisnjk114n71f0zang99' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='NYC average' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='28190.0'>
              <calculation class='tableau' formula='28190.0' />
            </column>
            <column caption='NYC Average' datatype='real' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='55752.0'>
              <calculation class='tableau' formula='55752.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0589wz90vav4f1169rwy21752fv5'>
            <column datatype='real' name='[Median Age (Males)]' role='measure' type='quantitative' />
            <column-instance column='[Median Age (Males)]' derivation='Sum' name='[sum:Median Age (Males):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1au7228032qtwo1fqkwst062qc4n'>
            <column datatype='integer' name='[Population Density]' role='measure' type='quantitative' />
            <column datatype='string' name='[Zone]' role='dimension' type='nominal' />
            <column-instance column='[Zone]' derivation='None' name='[none:Zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population Density]' derivation='Sum' name='[sum:Population Density:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1fnieb31otlwqw19nuwpg09b5aqq'>
            <column datatype='integer' name='[Median Household Income]' role='measure' type='quantitative' />
            <column-instance column='[Median Household Income]' derivation='Sum' name='[sum:Median Household Income:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1uef7ux1wisnjk114n71f0zang99'>
            <column datatype='real' name='[Median Age (Females)]' role='measure' type='quantitative' />
            <column-instance column='[Median Age (Females)]' derivation='Sum' name='[sum:Median Age (Females):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1au7228032qtwo1fqkwst062qc4n].[sum:Population Density:qk]' field-type='quantitative' max='125000' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1au7228032qtwo1fqkwst062qc4n].[sum:Population Density:qk]' scope='rows' value='Population Density (Sq. Mile)' />
            <format attr='subtitle' class='0' field='[federated.1au7228032qtwo1fqkwst062qc4n].[sum:Population Density:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1au7228032qtwo1fqkwst062qc4n].[sum:Population Density:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1fnieb31otlwqw19nuwpg09b5aqq].[sum:Median Household Income:qk]' field-type='quantitative' max='235000' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1fnieb31otlwqw19nuwpg09b5aqq].[sum:Median Household Income:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1fnieb31otlwqw19nuwpg09b5aqq].[sum:Median Household Income:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.0589wz90vav4f1169rwy21752fv5].[sum:Median Age (Males):qk]' field-type='quantitative' max='45.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0589wz90vav4f1169rwy21752fv5].[sum:Median Age (Males):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0589wz90vav4f1169rwy21752fv5].[sum:Median Age (Males):qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1uef7ux1wisnjk114n71f0zang99].[sum:Median Age (Females):qk]' field-type='quantitative' max='45.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.1uef7ux1wisnjk114n71f0zang99].[sum:Median Age (Females):qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1uef7ux1wisnjk114n71f0zang99].[sum:Median Age (Females):qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='line-pattern' id='refline0' value='solid' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-color' id='refline1' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <reference-line axis-column='[federated.1au7228032qtwo1fqkwst062qc4n].[sum:Population Density:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <reference-line axis-column='[federated.1fnieb31otlwqw19nuwpg09b5aqq].[sum:Median Household Income:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[Parameters].[Parameter 2]' z-order='2' />
          </pane>
          <pane id='1' y-axis-name='[federated.1au7228032qtwo1fqkwst062qc4n].[sum:Population Density:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[federated.1fnieb31otlwqw19nuwpg09b5aqq].[sum:Median Household Income:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[federated.0589wz90vav4f1169rwy21752fv5].[sum:Median Age (Males):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#606b76' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[federated.1uef7ux1wisnjk114n71f0zang99].[sum:Median Age (Females):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>([federated.1au7228032qtwo1fqkwst062qc4n].[sum:Population Density:qk] + ([federated.1fnieb31otlwqw19nuwpg09b5aqq].[sum:Median Household Income:qk] + ([federated.0589wz90vav4f1169rwy21752fv5].[sum:Median Age (Males):qk] + [federated.1uef7ux1wisnjk114n71f0zang99].[sum:Median Age (Females):qk])))</rows>
        <cols>[federated.1au7228032qtwo1fqkwst062qc4n].[none:Zone:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='WordMap'>
      <repository-location id='WordMap' path='/workbooks/Uber_Location_Vizualizations' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (uber2015_agg)' name='federated.0izu1xh1yhf3k51djjnit0uonsgm' />
          </datasources>
          <datasource-dependencies datasource='federated.0izu1xh1yhf3k51djjnit0uonsgm'>
            <column datatype='string' name='[F1]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Zone]' role='measure' type='quantitative' />
            <column-instance column='[F1]' derivation='None' name='[none:F1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Zone]' derivation='Sum' name='[sum:Zone:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Text' />
            <encodings>
              <size column='[federated.0izu1xh1yhf3k51djjnit0uonsgm].[sum:Zone:qk]' />
              <color column='[federated.0izu1xh1yhf3k51djjnit0uonsgm].[sum:Zone:qk]' />
              <text column='[federated.0izu1xh1yhf3k51djjnit0uonsgm].[none:F1:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Top 5 vs Low 5'>
      <repository-location id='Top5vsLow5' path='/workbooks/Uber_Location_Vizualizations' revision='' />
      <style />
      <size maxheight='600' maxwidth='1200' minheight='600' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='18' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='15' param='horz' type='layout-flow' w='99667' x='0' y='0'>
              <zone h='100000' id='12' param='horz' type='layout-flow' w='99667' x='0' y='0'>
                <zone h='100000' id='7' param='horz' type='layout-flow' w='99667' x='0' y='0'>
                  <zone h='100000' id='5' type='layout-basic' w='99667' x='0' y='0'>
                    <zone h='100000' id='3' name='Low 5' w='24817' x='74850' y='0' />
                    <zone h='100000' id='16' name='WordMap' w='50034' x='0' y='0' />
                    <zone h='100000' id='20' name='Top 5' w='24816' x='50034' y='0' />
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='218'>
    <window class='worksheet' name='HeatMap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.02fwd810xomj0v1gmb4i306m5a3z].[cnt:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02fwd810xomj0v1gmb4i306m5a3z].[cnt:Number of Records:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='WordMap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0izu1xh1yhf3k51djjnit0uonsgm].[sum:Zone:qk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Top 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Low 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.07u22bw0hvp68r10xezl814wi87o].[sum:Median Age (Males):qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Top 5 vs Low 5'>
      <viewpoints>
        <viewpoint name='Low 5'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 5'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='WordMap' />
      </viewpoints>
      <active id='16' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='HeatMap' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Low 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 5 vs Low 5' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
